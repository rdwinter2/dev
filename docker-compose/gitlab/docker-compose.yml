version: "3.8"

services:
  gitlab:
    container_name: gitlab
    hostname: ${GITLAB_SERVICE_NAME}.${DOMAINNAME}
    domainname: ${DOMAINNAME}
    image: ${REGISTRY}/gitlab/gitlab-ce:${GITLAB_TAG}@sha256:${GITLAB_DIGEST}
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url = 'http://${GITLAB_SERVICE_NAME}.${DOMAINNAME}'
        registry_external_url 'http://${GITLAB_REGISTRY_SERVICE_NAME}.${DOMAINNAME}'
        pages_external_url 'http://${GITLAB_PAGES_SERVICE_NAME}.${DOMAINNAME}'
        nginx['redirect_http_to_https'] = false
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        #nginx['proxy_set_headers'] = {'X-Forwarded-Proto' => 'https', 'X-Forwarded-Ssl' => 'on'}
        gitlab_rails['registry_enabled'] = true
        registry['enable'] = true
        registry_nginx['enable'] = true
        registry_nginx['listen_port'] = 15001
        registry_nginx['listen_https'] = false
        registry_nginx['proxy_set_headers'] = {"X-Forwarded-Proto" => "https","X-Forwarded-Ssl" => "on"}
        pages_nginx['listen_port'] = 15002
        pages_nginx['listen_https'] = false
        pages_nginx['proxy_set_headers'] = {"X-Forwarded-Proto" => "https","X-Forwarded-Ssl" => "on"}
        gitlab_pages['inplace_chroot'] = true
        nginx['client_max_body_size'] = '2G'
        sidekiq['concurrency'] = 15
        postgresql['shared_buffers'] = "512MB"
        gitlab_rails['initial_root_password'] = 'password'
        gitlab_rails['artifacts_enabled'] = true
        gitlab_rails['artifacts_path'] = "/var/opt/gitlab/gitlab-artifacts"
        gitlab_rails['lfs_enabled'] = true
        gitlab_rails['backup_keep_time'] = 172600
        gitlab_ci['backup_keep_time'] = 172600
        gitlab_rails['ldap_enabled'] = false
        gitlab_rails['ldap_servers'] = YAML.load <<-'EOS'
          main:
            label: 'LDAP'
            host: '${LDAP_HOST}'
            port: 389
            uid: 'sAMAccountName'
            bind_dn: '${LDAP_USER}@${DOMAINNAME}'
            password: '${LDAP_USER_PASSWORD}'
            encryption: 'plain'
            verify_certificates: false
            active_directory: true
            base: '${LDAP_BASE}'
        EOS
    expose:
      - "80"
      #- "22"
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_data:/var/opt/gitlab
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitlab.rule=Host(`${GITLAB_SERVICE_NAME}.${DOMAINNAME}`)"
      - "traefik.http.routers.gitlab.service=gitlab"
      - "traefik.http.routers.gitlab.entrypoints=http"
      - "traefik.http.services.gitlab.loadbalancer.server.port=80"
      ## Middlewares
      #- "traefik.http.routers.gitlab.middlewares=chain-no-auth@file" # No Authentication
      #- "traefik.http.routers.portainer.middlewares=chain-basic-auth@file" # Basic Authentication
      #- "traefik.http.routers.portainer.middlewares=chain-oauth@file" # Google OAuth 2.0

      # ssh inbound requests  
      # Since traefik (well tcp actually) doesn't pass Server Name Information (SNI)
      # We can only have 1 git server with ssh enabled on port 22 of the docker host.
      #- "traefik.tcp.routers.gitlab-ssh.entrypoints=ssh"
      #- "traefik.tcp.services.gitlab-ssh.loadbalancer.server.port=22"
      #- "traefik.tcp.routers.gitlab-ssh.rule=HostSNI(`*`)"  #`*` listens for ANY connections on 22
      #- "traefik.tcp.routers.gitlab-ssh.service=gitlab-ssh"
    networks:
      - kind
    restart: unless-stopped

networks:
  kind:
    external:
      name: kind

volumes:
  gitlab_config:
    external: true
  gitlab_logs:
    external: true
  gitlab_data:
    external: true
  gitlab-runner_conf:
    external: true